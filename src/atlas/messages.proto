package pomagma.protobuf;

//----------------------------------------------------------------------------
// raw data

message SparseMap {
  // either key,val are both set, or key_diff_minus_one,val_diff are both set
  repeated uint32 key = 1 [packed=true];
  repeated uint32 val = 2 [packed=true];
  repeated uint32 key_diff_minus_one = 3 [packed=true];
  repeated int32 val_diff = 4 [packed=true];
}

message DenseSet {
  required uint32 item_dim = 1;
  required bytes mask = 2;
}

//----------------------------------------------------------------------------
// algebraic structure

message Carrier {
  optional string name = 1;
  optional bytes hash = 2;
  required uint32 item_dim = 3;

  repeated bytes blobs = 15;
}

message NullaryFunction {
  required string name = 1;
  optional bytes hash = 2;
  optional uint32 val = 3;

  repeated bytes blobs = 15;
}

message UnaryFunction {
  required string name = 1;
  optional bytes hash = 2;
  optional SparseMap sparse = 3;

  repeated bytes blobs = 15;
}

message BinaryFunction {
  message Row {
    required uint32 lhs = 1;
    required SparseMap rhs_val = 2;
  }

  required string name = 1;
  optional bytes hash = 2;
  repeated Row rows = 3;

  repeated bytes blobs = 15;
}

message UnaryRelation {
  required string name = 1;
  optional bytes hash = 2;
  optional DenseSet dense = 3;

  repeated bytes blobs = 15;
}

message BinaryRelation {
  message Row {
    required uint32 lhs = 1;
    required DenseSet rhs = 2;
  }

  required string name = 1;
  optional bytes hash = 2;
  repeated Row rows = 3;

  repeated bytes blobs = 15;
}

message Structure {
  optional string name = 1;
  optional bytes hash = 2;

  optional Carrier carrier = 3;

  repeated NullaryFunction nullary_functions = 4;
  repeated UnaryFunction injective_functions = 6;
  repeated BinaryFunction binary_functions = 7;
  repeated BinaryFunction symmetric_functions = 8;

  repeated UnaryRelation unary_relations = 9;
  repeated BinaryRelation binary_relations = 10;
}
