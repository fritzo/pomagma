syntax = "proto3";

package pomagma.protobuf;

message Histogram {
  message Term {
    uint64 count = 1;
    uint32 ob = 2;
    string name = 3;
  }
  repeated Term terms = 1;
}

message AnalystRequest {

  message TestInference {
  }
  message Simplify {
    repeated string codes = 1;
  }
  message Validate {
    repeated string codes = 1;
  }
  message ValidateCorpus {
    message Line {
      string name = 1;
      string code = 2;
    }
    repeated Line lines = 1;
  }
  message GetHistogram {
  }
  message FitLanguage {
    Histogram histogram = 1;
  }
  message Solve {
    string program = 1;
    uint64 max_solutions = 2;
  }
  message ValidateFacts {
    repeated string facts = 1;
  }

  repeated string error_log = 1;
  string id = 2;
  TestInference test_inference = 3;
  Simplify simplify = 4;
  Validate validate = 5;
  ValidateCorpus validate_corpus = 6;
  GetHistogram get_histogram = 7;
  FitLanguage fit_language = 8;
  Solve solve = 9;
  ValidateFacts validate_facts = 10;
}

message AnalystResponse {
  // this matches enum class Trool in src/util/trool.h
  enum Trool {
    MAYBE = 0;
    FALSE = 1;
    TRUE = 2;
  }
  message Validity {
    Trool is_top = 1;
    Trool is_bot = 2;
    bool pending = 3;
  }

  message TestInference {
    uint64 fail_count = 1;
  }
  message Simplify {
    repeated string codes = 1;
  }
  message Validate {
    repeated Validity results = 1;
  }
  message ValidateCorpus {
    repeated Validity results = 1;
  }
  message GetHistogram {
    Histogram histogram = 1;
  }
  message FitLanguage {
    message Symbol {
      string name = 1;
      float prob = 2;
    }
    repeated Symbol symbols = 1;
  }
  message Solve {
    repeated string necessary = 1;
    repeated string possible = 2;
  }
  message ValidateFacts {
    Trool result = 1;
  }

  repeated string error_log = 1;
  string id = 2;
  TestInference test_inference = 3;
  Simplify simplify = 4;
  Validate validate = 5;
  ValidateCorpus validate_corpus = 6;
  GetHistogram get_histogram = 7;
  FitLanguage fit_language = 8;
  Solve solve = 9;
  ValidateFacts validate_facts = 10;
}
