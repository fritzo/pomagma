;; intro forms
(EQUAL lib.ok (FUN x x))
(EQUAL lib.true (FUN x (FUN y x)))
(EQUAL lib.false (FUN x (FUN y y)))
(EQUAL lib.none (FUN f (FUN g f)))
(EQUAL lib.some (FUN x (FUN f (FUN g (g x)))))
(EQUAL lib.pair (FUN x (FUN y (FUN f (f x y)))))
(EQUAL lib.inl (FUN x (FUN f (FUN g (f x)))))
(EQUAL lib.inr (FUN y (FUN f (FUN g (g y)))))
(EQUAL lib.zero (FUN z (FUN s z)))
(EQUAL lib.succ (FUN n (FUN z (FUN s (s n)))))
(EQUAL lib.nil (FUN n (FUN c n)))
(EQUAL lib.cons (FUN head (FUN tail (FUN n (FUN c (c head tail))))))
