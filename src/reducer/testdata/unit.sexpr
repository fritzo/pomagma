;;; Unit

; TODO define lib.unit_* here, rather than in pomagma.reducer.lib

;; unit_type
(EQUAL (lib.unit_type lib.ok) lib.ok)
(EQUAL (lib.unit_type lib.error) lib.error)
(EQUAL (lib.unit_type lib.undefined) lib.undefined)
(EQUAL (lib.unit_type lib.true) lib.error)
(EQUAL (lib.unit_type lib.false) lib.error)
(EQUAL (lib.unit_type lib.join) lib.error)
(EQUAL (lib.unit_type x) (UNIT x))

;; unit_test
(EQUAL (lib.unit_test lib.ok) lib.ok)
(EQUAL (lib.unit_test lib.error) lib.error)
(EQUAL (lib.unit_test lib.undefined) lib.undefined)
(EQUAL (lib.unit_test lib.true) lib.error)
(EQUAL (lib.unit_test lib.false) lib.error)
(EQUAL (lib.unit_test lib.join) lib.error)
(EQUAL (lib.unit_test x) (UNIT x))

;; unit_and
(EQUAL (lib.unit_and lib.ok lib.ok) lib.ok)
(EQUAL (lib.unit_and lib.ok lib.undefined) lib.undefined)
(EQUAL (lib.unit_and lib.undefined lib.ok) lib.undefined)
(EQUAL (lib.unit_and lib.undefined lib.undefined) lib.undefined)
(EQUAL (lib.unit_and lib.ok lib.true) lib.error)
(EQUAL (lib.unit_and lib.ok lib.false) lib.error)
(EQUAL (lib.unit_and lib.true lib.ok) lib.error)
(EQUAL (lib.unit_and lib.false lib.ok) lib.error)

;; unit_or
(EQUAL (lib.unit_or lib.ok lib.ok) lib.ok)
(EQUAL (lib.unit_or lib.ok lib.undefined) lib.ok)
(EQUAL (lib.unit_or lib.undefined lib.ok) lib.ok)
(EQUAL (lib.unit_or lib.undefined lib.undefined) lib.undefined)
(EQUAL (lib.unit_or lib.ok lib.true) lib.error)
(EQUAL (lib.unit_or lib.ok lib.false) lib.error)
(EQUAL (lib.unit_or lib.true lib.ok) lib.error)
(EQUAL (lib.unit_or lib.false lib.ok) lib.error)

;; quote_unit
(EQUAL (lib.unit_quote lib.ok) (QUOTE lib.ok))
(EQUAL (lib.unit_quote lib.undefined) lib.undefined)
(EQUAL (lib.unit_quote lib.error) lib.error)
(EQUAL (lib.unit_quote lib.true) lib.error)
(EQUAL (lib.unit_quote lib.false) lib.error)

;; enum_unit
(EQUAL (lib.enum_contains (QUOTE lib.enum_unit) (QUOTE lib.ok)) lib.true)
(EQUAL (lib.enum_contains (QUOTE lib.enum_unit) (QUOTE lib.undefined)) lib.true)
(EQUAL (lib.enum_contains (QUOTE lib.enum_unit) (QUOTE lib.error)) lib.false)
(EQUAL (lib.enum_contains (QUOTE lib.enum_unit) (QUOTE lib.true)) lib.false)
(EQUAL (lib.enum_contains (QUOTE lib.enum_unit) (QUOTE lib.false)) lib.false)
