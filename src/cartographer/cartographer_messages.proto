syntax = "proto3";

package pomagma.protobuf;

message CartographerRequest {

  message Crop {
    uint32 headroom = 1;
  }
  message Declare {
    repeated string nullary_functions = 1;
  }
  message Assume {
    string facts_in = 1;
  }
  message Infer {
    uint32 priority = 1;
  }
  message Execute {
    string program = 1;
  }
  message Aggregate {
    string survey_in = 1;
  }
  message Validate {
  }
  message Info {
  }
  message Dump {
    string world_out = 1;
  }
  message Trim {
    uint32 size = 1;
    bool temperature = 2;
    string filename = 3;
  }
  message Conjecture {
    string diverge_out = 1;
    string equal_out = 2;
    uint64 max_count = 3;
  }
  message Stop {
  }

  // ordered by priority
  optional Crop crop = 10;
  optional Declare declare = 11;
  optional Assume assume = 12;
  optional Infer infer = 13;
  optional Execute execute = 14;

  optional Aggregate aggregate = 20;

  optional Validate validate = 30;

  optional Info info = 40;
  optional Dump dump = 41;
  repeated Trim trim = 42;
  optional Conjecture conjecture = 43;

  optional Stop stop = 99;
}

message CartographerResponse {

  message Crop {
  }
  message Declare {
  }
  message Assume {
    uint64 pos_count = 1;
    uint64 neg_count = 2;
    uint64 merge_count = 3;
    uint64 ignored_count = 4;
  }
  message Infer {
    uint64 theorem_count = 1;
  }
  message Execute {
  }
  message Aggregate {
  }
  message Validate {
  }
  message Info {
    uint32 item_count = 1;
  }
  message Dump {
  }
  message Trim {
  }
  message Conjecture {
    uint64 diverge_count = 1;
    uint64 equal_count = 2;
  }
  message Stop {
  }

  optional Crop crop = 10;
  optional Declare declare = 11;
  optional Assume assume = 12;
  optional Infer infer = 13;
  optional Execute execute = 14;

  optional Aggregate aggregate = 20;

  optional Validate validate = 30;

  optional Info info = 40;
  optional Dump dump = 41;
  repeated Trim trim = 42;
  optional Conjecture conjecture = 43;

  optional Stop stop = 99;
}
