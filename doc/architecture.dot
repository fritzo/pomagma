digraph G {
	overlap=false;
	size="5,5";
	node [shape=box];


	//subgraph cluster_legend {
	//	rank="max";
	//	Human [style=filled, fillcolor=pink];
	//	TODO;
	//	Data [shape=ellipse];
	//}

	Theorist;
	Linguist;
	Revisor;
	{
		node [style=filled, fillcolor=pink];
		LanguageReviewer [label="Reviewer"];
		TheoryReviewer [label="Reviewer"];
	}
	{
		node [shape=ellipse];
		Language;
		Theory;
		Structure;
		Corpus;
	}
	EditorServer [label="Editor\nServer"];
	BrowserServer [label="Browser\nServer"];

	subgraph cluster_grower {
		Grower;

		color = "#666666";
		fontcolor = "#666666";
		label = "many";
		labelloc = "b";
	}

	subgraph cluster_writer {
		rank="max";
		EditorClient [label="Editor\nClient"];
		{
			rank="max";
			Writer [style=filled, fillcolor=pink];
		}

		color = "#666666";
		fontcolor = "#666666";
		label = "many";
		labelloc = "b";
	}

	subgraph cluster_reader {
		rank="max";
		BrowserClient [label="Browser\nClient"];
		{
			rank="max";
			Reader [style=filled, fillcolor=pink];
		}

		color = "#666666";
		fontcolor = "#666666";
		label = "many";
		labelloc = "b";
	}


	{ rank="min"; Theorist; Linguist; }
	{ rank="same"; LanguageReviewer; TheoryReviewer; }
	{ rank="same"; Language; Theory; Structure; Corpus; }
	{ rank="same"; Trimmer; Aggregator; Compiler; }
	{ rank="same"; EditorServer; BrowserServer; }
	{ rank="same"; EditorClient; BrowserClient; }
	{ rank="max"; Writer; Reader; }


	// Workflow: Compile
	edge [dir=forward arrowhead=normal]; // pull
	Theory -> Compiler;
	edge [dir=both arrowtail=inv arrowhead=empty]; // push
	Compiler -> Grower;
	Compiler -> Trimmer;
	Compiler -> EditorServer;

	// Workflow:  Grow
	edge [dir=forward arrowhead=normal]; // pull
	Structure -> Trimmer;
	Language -> Trimmer;
	Trimmer -> Grower;
	Structure -> Aggregator;
	edge [dir=both arrowtail=inv arrowhead=empty]; // push
	Grower -> Aggregator;
	Aggregator -> Structure;

	// Workflow:  Edit
	edge [dir=forward arrowhead=normal]; // pull
	Structure -> EditorServer;
	Language -> EditorServer;
	EditorServer -> EditorClient;
	EditorClient -> Writer;
	edge [dir=both arrowtail=inv arrowhead=empty]; // push
	Writer -> EditorClient;
	EditorClient -> EditorServer;
	EditorServer -> Corpus;

	// Workflow:  Browse
	edge [dir=forward arrowhead=normal]; // pull
	Corpus -> BrowserServer;
	Language -> BrowserServer;
	BrowserServer -> BrowserClient;
	BrowserClient -> Reader;
	edge [dir=both arrowtail=inv arrowhead=empty]; // push
	Reader -> BrowserClient;

	// Workflow:  LearnLanguage
	edge [dir=forward arrowhead=normal]; // pull
	Corpus -> Linguist;
	Structure -> Linguist;
	Language -> Linguist;
	Linguist -> LanguageReviewer;
	edge [dir=both arrowtail=inv arrowhead=empty]; // push
	LanguageReviewer -> Language;
	LanguageReviewer -> Theory;

	// Workflow:  ReviseCorpus
	edge [dir=forward arrowhead=normal]; // pull
	Corpus -> Revisor;
	Language -> Revisor;
	Structure -> Revisor;
	edge [dir=both arrowtail=inv arrowhead=empty]; // push
	Revisor -> Corpus;

	// Workflow:  Theorize
	edge [dir=forward arrowhead=normal]; // pull
	Structure -> Theorist;
	Language ->  Theorist;
	Theorist -> TheoryReviewer;
	edge [dir=both arrowtail=inv arrowhead=empty]; // push
	TheoryReviewer -> Theory;
}
