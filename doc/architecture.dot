digraph G {
    overlap=false;
    size="5,5";
    node [shape=box];


    //subgraph cluster_legend {
    //    rank="max";
    //    Human [style=filled, fillcolor=pink];
    //    Data [shape=ellipse];
    //}

    {
        rank="min";
        Theorist;
        Linguist;
    }
    {
        //rank="max";
        node [style=filled, fillcolor=pink];
        TheoryReviewer [label="Reviewer"];
        LanguagesReviewer [label="Reviewer"];
    }
    {
        node [shape=ellipse];
        rank = "same";
        Languages;
        Theory;
        Atlas;
        Corpus;
    }
    Compiler;
    {
        rank = "same";
        Cartographer;
        Analyst;
    EditorServer [label="Editor\nServer"];
    }

    subgraph cluster_survey {
        Surveyor;

        color = "#666666";
        fontcolor = "#666666";
        label = "many";
        labelloc = "b";
    }

    subgraph cluster_edit {
        EditorClient [label="Editor\nClient"];
        Writer [style=filled, fillcolor=pink];

        color = "#666666";
        fontcolor = "#666666";
        label = "many";
        labelloc = "b";
    }


    // Workflow: Compile
    edge [dir=forward arrowhead=normal]; // pull
    Theory -> Compiler;
    Compiler -> Surveyor;
    Compiler -> Theory;

    // Workflow: Explore
    edge [dir=forward arrowhead=normal]; // pull
    Theory -> Cartographer;
    Atlas -> Cartographer;
    Theory -> Theorist;
    Languages -> Cartographer;
    Languages -> Surveyor;
    Cartographer -> Surveyor;
    edge [dir=both arrowtail=inv arrowhead=empty]; // push
    Surveyor -> Cartographer;
    Cartographer -> Atlas;
    Cartographer -> Theorist;
    TheoryReviewer -> Theory;
    Theorist -> Cartographer;
    Theorist -> TheoryReviewer;

    // Workflow: Edit
    edge [dir=forward arrowhead=normal]; // pull
    Atlas -> Analyst;
    Languages -> Analyst;
    Corpus -> EditorServer;
    Analyst -> EditorServer;
    EditorServer -> EditorClient;
    EditorClient -> Writer;
    edge [dir=both arrowtail=inv arrowhead=empty]; // push
    EditorServer -> Corpus;
    EditorServer -> Analyst;
    EditorClient -> EditorServer;
    Writer -> EditorClient;

    // Workflow: Fit Language
    edge [dir=forward arrowhead=normal]; // pull
    Analyst -> Linguist;
    Languages -> Linguist;
    Linguist -> LanguagesReviewer;
    edge [dir=both arrowtail=inv arrowhead=empty]; // push
    Linguist -> Languages;
    LanguagesReviewer -> Languages;
    LanguagesReviewer -> Theory;
}
