;; QUOTE
(EQUAL (QUOTE x) (QUOTE x))
(EQUAL (QUOTE (I x)) (QUOTE x))
(EQUAL (QUOTE (B K I I)) (QUOTE (K I)))
(EQUAL (QUOTE (C K I I)) (QUOTE I))
(EQUAL (QUOTE (S K I I)) (QUOTE I))

;; EVAL
(EQUAL (EVAL x) (EVAL x))
(EQUAL (EVAL (QUOTE I) x) x)
(EQUAL (EVAL TOP) TOP)
(EQUAL (EVAL BOT) BOT)
(EQUAL (QUOTE (EVAL (QUOTE (K I I)))) (QUOTE I))
(EQUAL (S K K (QUOTE (EVAL (QUOTE (K I I))))) (QUOTE I))

;; QQUOTE
(EQUAL (QQUOTE x) (QQUOTE x))
(EQUAL (QQUOTE (QUOTE x)) (QUOTE (QUOTE x)))
(EQUAL (QQUOTE TOP) TOP)
(EQUAL (QQUOTE BOT) BOT)

;; QAPP
(EQUAL (QAPP x y) (QAPP x y))
(EQUAL (QAPP (QUOTE x) y) (QAPP (QUOTE x) y))
(EQUAL (QAPP x (QUOTE y)) (QAPP x (QUOTE y)))
(EQUAL (QAPP (QUOTE x) (QUOTE y)) (QUOTE (x y)))
(EQUAL (QAPP (QUOTE S) (QUOTE K)) (QUOTE (K I)))
(EQUAL (QAPP (QAPP (QUOTE S) (I (QUOTE K))) (EVAL (QUOTE (QUOTE K)))) (QUOTE I))
(EQUAL (QAPP (QUOTE I) (QUOTE I)) (QUOTE I))
(EQUAL (QAPP (QAPP (QUOTE lib.list_map) (QUOTE I)) (QUOTE lib.nil)) (QUOTE lib.nil))
(EQUAL (QAPP BOT (QUOTE I)) BOT)
(EQUAL (QAPP (QUOTE I) BOT) BOT)
(EQUAL (QAPP TOP (QUOTE I)) TOP)
(EQUAL (QAPP (QUOTE I) TOP) TOP)
(EQUAL (QAPP TOP BOT) TOP)
(EQUAL (QAPP BOT TOP) TOP)

;; EQUAL
(EQUAL (QEQUAL x y) (QEQUAL x y))
(EQUAL (QEQUAL x (QUOTE y)) (QEQUAL x (QUOTE y)))
(EQUAL (QEQUAL (QUOTE x) y) (QEQUAL (QUOTE x) y))
(EQUAL (QEQUAL (QUOTE x) (QUOTE y)) (QEQUAL (QUOTE x) (QUOTE y)))
(EQUAL (QEQUAL (QUOTE x) (QUOTE x)) lib.true)
(EQUAL (QEQUAL (QUOTE I) (QUOTE K)) lib.false)
(EQUAL (QEQUAL TOP x) TOP)
(EQUAL (QEQUAL x TOP) TOP)
(EQUAL (QEQUAL BOT x) (QEQUAL BOT x))
(EQUAL (QEQUAL x BOT) (QEQUAL x BOT))
(EQUAL (QEQUAL BOT (QUOTE x)) BOT)
(EQUAL (QEQUAL (QUOTE x) BOT) BOT)

;; QLESS
(EQUAL (QLESS x y) (QLESS x y))
(EQUAL (QLESS x (QUOTE y)) (QLESS x (QUOTE y)))
(EQUAL (QLESS (QUOTE x) y) (QLESS (QUOTE x) y))
(EQUAL (QLESS (QUOTE x) (QUOTE y)) (QLESS (QUOTE x) (QUOTE y)))
(EQUAL (QLESS (QUOTE x) (QUOTE x)) lib.true)
(EQUAL (QLESS (QUOTE BOT) (QUOTE x)) lib.true)
(EQUAL (QLESS (QUOTE x) (QUOTE TOP)) lib.true)
(EQUAL (QLESS (QUOTE TOP) (QUOTE BOT)) lib.false)
(EQUAL (QLESS TOP x) TOP)
(EQUAL (QLESS x TOP) TOP)
(EQUAL (QLESS BOT x) (QLESS BOT x))
(EQUAL (QLESS x BOT) (QLESS x BOT))
(EQUAL (QLESS BOT (QUOTE x)) (QLESS BOT (QUOTE x)))
(EQUAL (QLESS (QUOTE x) BOT) (QLESS (QUOTE x) BOT))
(EQUAL (QLESS BOT (QUOTE TOP)) lib.true)  ; xfail bohm
(EQUAL (QLESS (QUOTE BOT) BOT) lib.true)  ; xfail bohm
(EQUAL (QLESS (QUOTE TOP) (QUOTE (S K I TOP))) lib.true)
(EQUAL (QLESS (QUOTE (S K I BOT)) (QUOTE BOT)) lib.true)
(EQUAL (QLESS (QUOTE (S I I (S I I))) (QUOTE BOT)) lib.true)  ; xfail bohm
